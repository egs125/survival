<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="spendingMapper">
  	<resultMap id="budget" type="budget">
  		<id property="id" column="id" />
		<result property="dailyBudget" column="daily_budget" />
		<result property="weeklyBudget" column="weekly_budget" />
		<result property="monthlyBudget" column="monthly_budget" />
		<result property="yearlyBudget" column="yearly_budget" />
  	</resultMap>
  	
  	<resultMap id="spending" type="spending">
  		<id property="id" column="id" />
  		<result property="category" column="category" />
		<result property="operator" column="operator" />
		<result property="amount" column="amount" />
		<result property="date" column="date" />
		<result property="memo" column="memo" />
  	</resultMap>
  	
  	<!-- 예산 정보 조회 -->
  	<select id="retrieveBudget" parameterType="java.lang.String" resultType="budget">
  		SELECT DAILY_BUDGET,
  			   WEEKLY_BUDGET,
  			   MONTHLY_BUDGET,
  			   YEARLY_BUDGET
  		  FROM BUDGET
  		 WHERE ID = #{id} 
  	</select>
  	
  	<!-- 소비내역 조회 -->
  	<select id="retrieveSpendingList" parameterType="java.lang.String" resultType="spending">
  		SELECT CATEGORY,
  			   OPERATOR,
  			   AMOUNT,
  			   DATE,
  			   MEMO
  		  FROM SPENDING
  		 WHERE ID = #{id}  			   
  	</select>
  	
  	<!-- 일일 예산 세팅 -->
  	<insert id="saveNewBudget" parameterType="map">
  		INSERT INTO BUDGET
  		(ID, DAILY_BUDGET)
  		VALUES 
  		(
  			#{id},
  			#{budget}
  		)
  	</insert>
  	<!-- 총 게시물 수 조회
  	<select id="getTotalCount" resultType="int">
  		SELECT COUNT(*)
  		  FROM NOTE
  		 WHERE DELETE_AT = 'N'
  	</select>
  	
  	게시물 조회
	<select id="getNoteList" parameterType="paging" resultType="note">
	<![CDATA[
		SELECT TB.SN,
			   TB.TITLE,
			   TB.INSERT_DT 	
	      FROM (SELECT SN,
					   TITLE,
					   SUBSTRING(INSERT_DT, 1, 10) AS INSERT_DT,
					   ROW_NUMBER() OVER() 		   AS ROWNO
				  FROM NOTE
				 WHERE DELETE_AT = 'N'
			  ORDER BY SN ASC) 					   AS TB   
	     WHERE TB.ROWNO >= #{firstNote}
	       AND TB.ROWNO <= #{lastNote}
	 ]]>  
	</select>
	
	게시물 상세 조회
	<select id="retrieveNote" parameterType="java.lang.String" resultType="note">
		SELECT SN,
			   TITLE,
			   CONTENTS 
		  FROM NOTE
		 WHERE SN = #{sn}
		   AND DELETE_AT = 'N'
	</select>
	
	새 글 작성
	<insert id="writeNote" parameterType="note">
		INSERT INTO NOTE
		VALUES 
		(
			(SELECT LPAD(MAX(SN) + 1, '5', '0') AS SN
			   FROM NOTE AS TB_TEMP),
			#{title},
			#{contents},
			NOW(),
			NOW(),
			'N'   
		)		
		INSERT INTO NOTE
		(SN, TITLE, CONTENTS, INSERT_DT, UPDATE_DT, DELETE_AT)
		VALUES
		(
			(SELECT LPAD(MAX(SN) + 1, '5', '0') AS SN
			   FROM NOTE AS TB_TEMP),
			#{title},
			#{contents},
			NOW(),
			NOW(),
			'N'   
		)
		ON DUPLICATE KEY
		
		UPDATE
		TITLE = #{title},
		CONTENTS = #{contents},
		UPDATE_DT = NOW()		
	</insert>
	
	게시물 삭제
	<update id="deleteNote" parameterType="java.lang.String">
		UPDATE NOTE
		   SET UPDATE_DT = NOW(),
		   	   DELETE_AT = 'Y'
		 WHERE SN = #{sn}
	</update>
	
	게시물 수정
	<update id="updateNote" parameterType="note">
		UPDATE NOTE
		   SET TITLE = #{title},
		   	   CONTENTS = #{contents},
		   	   UPDATE_DT = NOW()	   	   	
		 WHERE SN = #{sn} 
	</update> -->
  	<!-- 
	<select id="memberAll" parameterType="List" resultMap="memberResult">
	<![CDATA[
	select x.mb_id, x.mb_pwd, x.mb_name, x.mb_email, x.mb_phone, x.mb_joindate,
		   x.mb_original_pic, x.mb_rename_pic, x.mb_bank, x.mb_loc_phone,
		   x.mb_address, x.mb_grade
	from(
		select rownum as rnum, a.mb_id, a.mb_pwd, a.mb_name, a.mb_email, a.mb_phone, a.mb_joindate,
		   a.mb_original_pic, a.mb_rename_pic, a.mb_bank, a.mb_loc_phone,
		   a.mb_address, a.mb_grade
		from(
			select *
			from member
			order by #{code})a
		where rownum <= #{end})x
	where x.rnum >= #{start}
	]]>
	<include refid="search" />
	
	</select>
	
	<select id="memberMore" parameterType="java.util.HashMap" resultMap="memberResult">
		<![CDATA[
		select x.mb_id, x.mb_pwd, x.mb_name, x.mb_email, x.mb_phone, x.mb_joindate, x.mb_original_pic,
				x.mb_rename_pic, x.mb_bank, x.mb_loc_phone, x.mb_address, x.mb_grade
		from(
			select rownum as rnum, a.mb_id, a.mb_pwd, a.mb_name, a.mb_email, a.mb_phone, a.mb_joindate, a.mb_original_pic,
				a.mb_rename_pic, a.mb_bank, a.mb_loc_phone, a.mb_address, a.mb_grade
			from(
				select * 
				from member
				order by #{code})a
				where rownum <= #{end})x
			where x.rnum >= #{start}
			]]>
						
	</select> -->
  </mapper>